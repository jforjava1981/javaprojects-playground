<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">
           
    <context:property-placeholder
		location="classpath*:properties/config/system.properties" ignore-unresolvable="true" order="2"/>       
           
	<http use-expressions="true">
		<intercept-url pattern="/auth/showLogin" access="permitAll()"></intercept-url>
		<intercept-url pattern="/images/**" access="permitAll()"></intercept-url>
		<intercept-url pattern="/js/**" access="permitAll()"></intercept-url>
		<intercept-url pattern="/css/**" access="permitAll()"></intercept-url>
		<intercept-url pattern="/auth/showregister" access="permitAll()" />
		<intercept-url pattern="/auth/register" access="permitAll()" />
		<intercept-url pattern="/favicon.ico" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="/chat/searchusers" access="hasRole('ROLE_USER') || hasRole('ROLE_ADMIN')"></intercept-url>
		<intercept-url pattern="/chat/invite" access="hasRole('ROLE_USER') || hasRole('ROLE_ADMIN')"></intercept-url>
		<intercept-url pattern="/chat/acceptinvite" access="hasRole('ROLE_USER') || hasRole('ROLE_ADMIN')"></intercept-url>
		<intercept-url pattern="/chat/rejectinvite" access="hasRole('ROLE_USER') || hasRole('ROLE_ADMIN')"></intercept-url>
		<intercept-url pattern="/chatter/**" access="isAuthenticated()"></intercept-url>	
		<intercept-url pattern="/**" access="isAuthenticated()"></intercept-url>
		<form-login login-page="/auth/showLogin" always-use-default-target="true"
			default-target-url="/auth/home" authentication-failure-url="/auth/showLogin?error=1"
			login-processing-url="/auth/login" password-parameter="userPassword" 
			username-parameter="userId" />
		<logout logout-success-url="http://${email.link.host}" logout-url="/auth/logout" delete-cookies="JSESSIONID" invalidate-session="true"></logout>
		
	</http>
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="chatterSecurityService" />
	</authentication-manager>
	<beans:bean id="chatterSecurityService"
		class="com.chatter.service.security.ChatterSecurityService">
		<beans:property name="authDAO" ref="authDAO"></beans:property>
	</beans:bean>
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>securitymessages</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean class="com.chatter.web.listener.ChatterSpringAppEventListener"> 
		<beans:property name="authService" ref="authService"></beans:property>
	</beans:bean>
</beans:beans>
